@page "/login"
@using AquaparkApp.Client.Services
@using AquaparkApp.Shared
@inject AuthService AuthService
@inject NavigationManager NavigationManager

<h3>Login</h3>

@if (!string.IsNullOrEmpty(errorMessage))
{
    <div class="alert alert-danger">
        @errorMessage
    </div>
}

<div class="row">
    <div class="col-md-4">
        <EditForm Model="loginDto" OnValidSubmit="HandleLogin">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div class="form-group">
                <label for="username">Username</label>
                <InputText id="username" class="form-control" @bind-Value="loginDto.Username" />
            </div>

            <div class="form-group">
                <label for="password">Password</label>
                <InputText id="password" type="password" class="form-control" @bind-Value="loginDto.Password" />
            </div>

            <button type="submit" class="btn btn-primary mt-2" disabled="@isLoading">
                @if (isLoading)
                {
                    <span>Loading...</span>
                }
                else
                {
                    <span>Login</span>
                }
            </button>
        </EditForm>

        <div class="mt-3">
            <a href="/register">Don't have an account? Register here.</a>
        </div>
    </div>
</div>

@code {
    private UserLoginDto loginDto = new UserLoginDto();
    private string errorMessage;
    private bool isLoading;

    private async Task HandleLogin()
    {
        errorMessage = string.Empty;
        isLoading = true;

        try
        {
            var result = await AuthService.Login(loginDto);
            if (result)
            {
                NavigationManager.NavigateTo("/");
            }
            else
            {
                errorMessage = "Login failed. Please check your credentials.";
            }
        }
        catch (Exception ex)
        {
            errorMessage = $"An error occurred: {ex.Message}";
        }
        finally
        {
            isLoading = false;
        }
    }
}