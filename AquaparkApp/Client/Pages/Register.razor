@page "/register"
@using System.ComponentModel.DataAnnotations
@using Microsoft.AspNetCore.Components.Forms
@inject NavigationManager NavigationManager

<div class="d-flex justify-content-center align-items-center" style="height: 100vh; background-color: #f8f9fa;">
    <div class="card p-4 shadow-lg" style="width: 100%; max-width: 400px; border-radius: 1rem;">
        <div class="text-center mb-4">
            <i class="bi bi-person-plus fs-1 text-primary"></i>
            <h2 class="mt-2">Rejestracja</h2>
        </div>

        <EditForm Model="@registerModel" OnValidSubmit="HandleRegister">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div class="mb-3">
                <label for="email" class="form-label">Email</label>
                <input id="email" class="form-control" @bind-value="registerModel.Email" />
                <ValidationMessage For="@(() => registerModel.Email)" />
            </div>

            <div class="mb-3">
                <label for="password" class="form-label">Hasło</label>
                <input id="password" type="password" class="form-control" @bind-value="registerModel.Password" />
                <ValidationMessage For="@(() => registerModel.Password)" />
            </div>

            <div class="mb-3">
                <label for="confirmPassword" class="form-label">Potwierdź hasło</label>
                <input id="confirmPassword" type="password" class="form-control" @bind-value="registerModel.ConfirmPassword" />
                <ValidationMessage For="@(() => registerModel.ConfirmPassword)" />
            </div>

            <button type="submit" class="btn btn-primary w-100">Zarejestruj się</button>
        </EditForm>

        <div class="text-center mt-3">
            <a href="/login">Masz już konto? Zaloguj się</a>
        </div>
    </div>
</div>

@code {
    private RegisterModel registerModel = new RegisterModel();

    private void HandleRegister()
    {
        if (registerModel.Password != registerModel.ConfirmPassword)
        {
            Console.WriteLine("Hasła nie są zgodne!");
            return;
        }

        // Tu możesz dodać logikę rejestracji użytkownika, np. wysłanie danych do API
        Console.WriteLine($"Rejestracja użytkownika {registerModel.Email}");
        NavigationManager.NavigateTo("/login");
    }

    public class RegisterModel
    {
        [Required(ErrorMessage = "Email jest wymagany")]
        [EmailAddress(ErrorMessage = "Nieprawidłowy format email")]
        public string Email { get; set; } = "";

        [Required(ErrorMessage = "Hasło jest wymagane")]
        [MinLength(6, ErrorMessage = "Hasło musi mieć co najmniej 6 znaków")]
        public string Password { get; set; } = "";

        [Required(ErrorMessage = "Potwierdzenie hasła jest wymagane")]
        public string ConfirmPassword { get; set; } = "";
    }
}
